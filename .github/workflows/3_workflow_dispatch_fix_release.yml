name: 3 Flow - Manual Fix Release

on:
  workflow_dispatch:
# принимает на вход версию релиза и все действия выполняет в ветке этого релиза
    inputs:
      release_version:
        description: 'Release version (e.g. 10)'
        required: true
jobs:
# запускает параллельно проверку типов и тесты
  fix-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Run types check
        run: npm run lint

      - name: Run tests
        run: npm run test
# собирает docker-образ с двумя тегами:
# - cr.yandex/<идентификатор_реестра>/app:<версия_релиза>_fix<номер_запуска_фиксрелизного_флоу>
# - cr.yandex/<идентификатор_реестра>/app:<версия_релиза>_latest
# - загружает docker-образ в Container Registry (в реджистри должен появиться образ с двумя тегами, у старого образа тег latest пропадёт)
  build-and-push:
    needs: fix-checks
    runs-on: ubuntu-latest
    env:
      REGISTRY: cr.yandex/${{ secrets.YC_ID_CONTAINER }}
      IMAGE_NAME: app
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Login to Yandex Container Registry
        run: echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Set fix version
        id: fixver
        run: echo "fix_number=${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Build and tag Docker image
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_fix${{ steps.fixver.outputs.fix_number }} .
          docker tag $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_fix${{ steps.fixver.outputs.fix_number }} $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_latest

      - name: Push Docker image
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_fix${{ steps.fixver.outputs.fix_number }}
          docker push $REGISTRY/$IMAGE_NAME:${{ github.event.inputs.release_version }}_latest
  # создаёт тег с номером текущего релиза + пометкой fix и номером фикса
  create-fix-tag:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Tag and Push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
          git push origin ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
# добавляет комментарий в Issue, который содержит:
# - дату фикса,
# - автора фикса (тот, кто запустил флоу),
# -  список коммитов от предыдущего релизного (или фиксрелизного) тега
# - ссылку на docker-образом в Yandex Container Registry cr.yandex/<идентификатор_реестра>/app:<версия_релиза>_fix<номер_запуска_фиксрелизного_флоу>
  comment-on-issue:
    needs: create-fix-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get commit logs since last tag
        id: changelog
        run: |
          if git describe --tags --abbrev=0 >/dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            echo "log=$(git log $LAST_TAG..HEAD --pretty=format:'- %s (%an)')" >> $GITHUB_OUTPUT
          else
            echo "log=$(git log --pretty=format:'- %s (%an)')" >> $GITHUB_OUTPUT
          fi

      - name: Comment on issue
        uses: JasonEtco/create-an-issue@v2.9.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          changelog: ${{ steps.changelog.outputs.log }}
          version: ${{ github.event.inputs.release_version }}_fix${{ github.run_number }}
        with:
          filename: .github/workflows/fix_comment.md


