name: 4 Flow - Deploy release to Production

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (e.g. 10)"
        required: true

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest

    steps:
      - name: Save SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
          
      - name: Check Docker image exists
        run: |
          echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
          docker manifest inspect cr.yandex/${{ secrets.YC_ID_CONTAINER }}/app:${{ github.event.inputs.release_version }}_latest > /dev/null

      - name: Deploy to VM via SSH
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex
            docker pull cr.yandex/${{ secrets.YC_ID_CONTAINER }}/app:${{ github.event.inputs.release_version }}_latest
            docker stop app || true
            docker rm app || true
            docker run -d --name app -p 80:3000 cr.yandex/${{ secrets.YC_ID_CONTAINER }}/app:${{ github.event.inputs.release_version }}_latest
          EOF

      - name: Checkout code (required for gh CLI)
        uses: actions/checkout@v4

      - name: Add comment to Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          DATE=$(date +"%Y-%m-%d %H:%M:%S")
          VERSION=${{ github.event.inputs.release_version }}
          AUTHOR=${{ github.actor }}
          LINK="cr.yandex/${{ secrets.YC_ID_CONTAINER }}/app:${VERSION}_latest"
          WEB="http://${{ secrets.SSH_HOST }}/hw/store/"

          BODY=$(cat <<EOF
          ✅ Релиз выкачан в прод

          - 📅 Дата: $DATE
          - 👤 Автор: $AUTHOR
          - 🏷️ Версия: $VERSION
          - 🐳 Docker образ: \`$LINK\`
          - 🌐 Web: [$WEB]($WEB)
          EOF
          )

          ISSUE_NUMBER=$(gh issue list --state open --search "Release $VERSION" --json number -q ".[0].number")
          if [ -z "$ISSUE_NUMBER" ]; then
            echo "Issue for Release $VERSION not found."
            exit 1
          fi

          gh issue comment "$ISSUE_NUMBER" --body "$BODY"


